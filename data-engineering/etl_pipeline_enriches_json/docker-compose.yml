version: '3.8'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.8.1
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    PYTHONPATH: "/opt/airflow:${PYTHONPATH}"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./src:/opt/airflow/src
    - ./data:/opt/airflow/data
    - ./tests:/opt/airflow/tests
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID}:0"
  depends_on:
    - postgres
    - redis

services:

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    volumes:
      - redis_data:/data

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

  airflow-worker:
    <<: *airflow-common
    command: celery worker

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer

  airflow-init:
    <<: *airflow-common
    command: bash -c "airflow db migrate && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    environment:
      <<: *airflow-env
      PYTHONPATH: "/opt/airflow/src:${PYTHONPATH}"
    depends_on:
      - postgres
      - redis

# test
  pytest:
    image: python:3.8-slim
    depends_on:
      - postgres
      - redis
    working_dir: /opt/airflow
    volumes:
      - .:/opt/airflow
    environment:
      PYTHONPATH: "/opt/airflow/src:${PYTHONPATH}"
    command: >
      bash -c "
        pip install --no-cache-dir -r requirements.txt -r requirements-dev.txt &&
        pytest --maxfail=1 --disable-warnings -q
      "

volumes:
  postgres_data:
  redis_data:
