version: '3.8'
services:
  jupyterhub:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /home/piep_dama_dev/CODE/jupyterhub-data:/data
      - /home/piep_dama_dev/CODE/airflow-data/airflow-dags:/home/jovyan/work
      - /home/piep_dama_dev/CODE/jupyterhub-data/jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py
      - ./requirements.txt:/tmp/requirements.txt
      - /var/run/docker.sock:/var/run/docker.sock  # Mount the Docker socket
    ports:
      - "8000:8000"
    environment:
      - JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}
      # add new here
      - DOCKER_NETWORK_NAME=airflow_network
    restart: unless-stopped
    command: jupyterhub -f /srv/jupyterhub/jupyterhub_config.py

  postgres-airflow:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=piepairflow
      - POSTGRES_DB=airflow
      - POSTGRES_MAX_CONNECTIONS=200
    volumes:
      - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      - RABBITMQ_DEFAULT_USER=airflow
      - RABBITMQ_DEFAULT_PASS=piepairflow

  airflow-webserver:
    image: apache/airflow:2.8.0
    restart: always
    depends_on:
      - postgres-airflow
      - rabbitmq
    environment:
      - AIRFLOW_UID=1000  # replace with actual UID of piep_dama_dev
      - AIRFLOW_GID=1000 
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:piepairflow@postgres-airflow/airflow
      - AIRFLOW__CELERY__BROKER_URL=amqp://airflow:piepairflow@rabbitmq:5672//
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:piepairflow@postgres-airflow/airflow
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__RBAC=True
    volumes:
      - /home/piep_dama_dev/CODE/airflow-data/airflow-dags:/opt/airflow/dags
      - /home/piep_dama_dev/CODE/airflow-data/airflow-logs:/opt/airflow/logs
      - /home/piep_dama_dev/CODE/airflow-data/airflow-plugins:/opt/airflow/plugins
      - /home/piep_dama_dev/CODE/airflow-data/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.8.0
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW_UID=1000  # repeat for each service as needed
      - AIRFLOW_GID=1000
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:piepairflow@postgres-airflow/airflow
      - AIRFLOW__CELERY__BROKER_URL=amqp://airflow:piepairflow@rabbitmq:5672//
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:piepairflow@postgres-airflow/airflow
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__RBAC=True
    volumes:
      - /home/piep_dama_dev/CODE/airflow-data/airflow-dags:/opt/airflow/dags
      - /home/piep_dama_dev/CODE/airflow-data/airflow-logs:/opt/airflow/logs
      - /home/piep_dama_dev/CODE/airflow-data/airflow-plugins:/opt/airflow/plugins
      - /home/piep_dama_dev/CODE/airflow-data/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements.txt:/requirements.txt
    command: scheduler

  airflow-worker:
    image: apache/airflow:2.8.0
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW_UID=1000  # repeat for each service as needed
      - AIRFLOW_GID=1000
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:piepairflow@postgres-airflow/airflow
      - AIRFLOW__CELERY__BROKER_URL=amqp://airflow:piepairflow@rabbitmq:5672//
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:piepairflow@postgres-airflow/airflow
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__RBAC=True
    volumes:
      - /home/piep_dama_dev/CODE/airflow-data/airflow-dags:/opt/airflow/dags
      - /home/piep_dama_dev/CODE/airflow-data/airflow-logs:/opt/airflow/logs
      - /home/piep_dama_dev/CODE/airflow-data/airflow-plugins:/opt/airflow/plugins
      - /home/piep_dama_dev/CODE/airflow-data/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements.txt:/requirements.txt
    command: airflow celery worker

volumes:
  postgres-data:

networks:
  default:
    name: airflow_network
    driver: bridge
